 // Next is Last.
#include<bits/stdc++.h>
#include<algorithm>
using namespace std;

#define int                                                          long long
#define mod                                                          1000000007
#define all(v)                                                       v.begin(),v.end()
#define rall(v)                                                      v.rbegin(),v.rend()
#define pb                                                           push_back
#define vec(arr,n)                                                   vector<int> arr(n); 
#define vecw(arr)                                                    vector<int> arr; 
#define inputvec(arr,n)                                              for(int i=0;i<n;i++) cin>>arr[i]; 
#define max_of(arr)                                                  *max_element(arr.begin(),arr.end())
#define min_of(arr)                                                  *min_element(arr.begin(),arr.end())
#define count_of(arr,i)                                              count(arr.begin(),arr.end(),i)
#define p(a,b)                                                       pair<a,b>
#define dis(a)                                                       cout<<#a<<" = "<<a<<endl;
#define print(a)                                                     cout<<a<<endl;
#define fsort(arr)                                                   sort(arr.begin(),arr.end());
#define rsort(arr)                                                 	sort(arr.rbegin(),arr.rend());
#define reverse(arr)												               reverse(all(arr));
#define sum_of(arr)                                                  accumulate(arr.begin(),arr.end(),(int)0)
#define test                                                         int t; cin>>t; while(t--)



int nCr(int n,int r){
  // Complexity : O(r)  
    if(r>n)
      return 0;
    if(r==0 || r==n)
      return 1;
    return nCr(n-1,r-1) + nCr(n-1,r);
}

bool isPrime(int n){

   if(n<=1)
      return false;

   if(n==2 || n==3)
      return true;

   if(n%2==0 || n%3==0)
      return false;

   for(int i=5;i<=sqrt(n);i=i+6)
      if(n%i==0 || n%(i + 2)==0)
          return false;
 
   return true; 
}

bool cmp(pair<int,int> a,pair<int,int> b){
    if(a.first !=b.first){
        return a.first< b.first;
    }
 
    return a.second > b.second;
}

void printarr(vector<int> arr){
   for(auto i: arr){
      cout<<i<<" ";
   }
   cout<<endl;
}

int FIB(int n) {
    double phi = (1 + sqrt(5)) / 2;
    return static_cast<int>(round(std::pow(phi, n) / sqrt(5)));
}
 
int Mex(vector<int> a){
	
  fsort(a);
  
  if(a[0] > 0) return 0;
  
  for(int i=1;i<(int)a.size();i++){
    if(a[i] > a[i-1]+1){
      return a[i-1]+1;
    }
  }
  
  return a.back() + 1;
}

int LCM(int a,int b){
	int GCD=__gcd(a,b);
	return (a/GCD)*b;
}

 

// --------------------------------------------------------------------------------
vector<int> Divisors;
void printDivisors(int n ,vector<int> &Divisors) { 
    for (int i = 1; i <=sqrt(n); i++) 
        if (n % i == 0){
            Divisors.pb(i);
            if((n/i)!=i) Divisors.pb(n/i);

        } 
} 

void solve(){

int n; cin>>n;
string s; cin>>s;

vector<int> Divisors;
printDivisors(n,Divisors);

// for(int i:Divisors) cout<<i<<" ";
// cout<<endl;
fsort(Divisors);
for(int i=0;i<Divisors.size();i++){
    int val = Divisors[i];
    map<string,int> mpp;
    for(int j=0;j<s.length();j+=val){
        string t = s.substr(j,val);
        mpp[t]++;
    }

    if(mpp.size() == 1){
        cout << val << endl; 
        return;
    }else if(mpp.size() == 2){


        string a="",b="";
        int cnta=0,cntb=0;
        int v = 0;
        for(auto it:mpp){
            if(v==0){
                a = it.first;
                cnta = it.second;
                v++;
            }else{
                b = it.first;
                cntb= it.second;
            }
        }


        int cnt = 0;
        for(int j=0;j<a.length();j++){
            if(a[j]!=b[j]) cnt++;
        }

        // dis(a) dis(b)
        // dis(cnt) dis(cnta) dis(cntb)
        if(cnt>1) continue;
        else{
            if(cnta == 1 || cntb == 1){
                cout << val << endl;
                return;
            }
        }
    }

}

cout << n << endl;

}

// ---------------------------------------------------------------------------------
signed main(){
    ios_base::sync_with_stdio(false); cin.tie(NULL);
    // int qq=0;
   test{
   
      solve();
   }
}
